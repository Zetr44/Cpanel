const global = {
    apikey: 'ptla_b8qHemNaWluPVekskNsYiGfcP9daGHr2ynunuvmsegb',
    domain: 'https://ridz-private.xintzy.me',
    apklogin: 'https://s.id/wyjxg',
    nestid: 5,
    egg: 15,
    garansi: '10 Hari',
    location: 1
};

async function createPanelAccount(name, ram) {
    try {
        let disknya = ram === 'unli' ? '0' : `${parseInt(ram) * 1000}`;
        let cpu = ram === 'unli' ? '0' : `${parseInt(ram) * 40}`;

        const userResponse = await fetch(`${global.domain}/api/application/users`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${global.apikey}`
            },
            body: JSON.stringify({
                email: `${name}@example.com`,
                username: name.toLowerCase(),
                first_name: name,
                last_name: 'User',
                password: `${name}123`
            })
        });

        const userData = await userResponse.json();
        if (userData.errors) {
            throw new Error(userData.errors[0].detail);
        }

        const userId = userData.attributes.id;

        const serverResponse = await fetch(`${global.domain}/api/application/servers`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${global.apikey}`
            },
            body: JSON.stringify({
                name: `Server-${name}`,
                user: userId,
                egg: global.egg,
                description: 'Generated by Panel Creator',
                docker_image: 'ghcr.io/parkervcp/yolks:nodejs_18',
                startup: 'npm start',
                environment: {
                    INST: 'npm',
                    USER_UPLOAD: '0',
                    AUTO_UPDATE: '0',
                    CMD_RUN: 'npm start'
                },
                limits: {
                    memory: ram === 'unli' ? 0 : parseInt(ram) * 1024,
                    swap: 0,
                    disk: parseInt(disknya),
                    io: 500,
                    cpu: parseInt(cpu)
                },
                feature_limits: {
                    databases: 1,
                    backups: 1,
                    allocations: 1
                },
                deploy: {
                    locations: [global.location],
                    dedicated_ip: false,
                    port_range: []
                }
            })
        });

        const serverData = await serverResponse.json();
        if (serverData.errors) {
            throw new Error(serverData.errors[0].detail);
        }

        return {
            username: name.toLowerCase(),
            password: `${name}123`,
            loginUrl: global.apklogin,
            ram: ram,
            cpu: cpu,
            disk: disknya
        };
    } catch (error) {
        console.error('Error creating panel account:', error.message);
        throw error;
    }
}

document.getElementById('createButton').addEventListener('click', async () => {
    const name = document.getElementById('name').value;
    const ram = document.getElementById('ram').value;

    if (!name || !ram) {
        alert('Please fill in all fields!');
        return;
    }

    try {
        const panelData = await createPanelAccount(name, ram);
        document.getElementById('output').innerHTML = `
            <div class="card">
                <h3>Login Card</h3>
                <p><strong>Username:</strong> ${panelData.username}</p>
                <p><strong>Password:</strong> ${panelData.password}</p>
                <p><strong>Login URL:</strong> <a href="${panelData.loginUrl}" target="_blank">${panelData.loginUrl}</a></p>
                <p><strong>RAM:</strong> ${panelData.ram.toUpperCase()}</p>
                <p><strong>CPU:</strong> ${panelData.cpu}%</p>
                <p><strong>Disk:</strong> ${panelData.disk} MB</p>
            </div>
        `;
    } catch (error) {
        alert(`Error: ${error.message}`);
    }
});